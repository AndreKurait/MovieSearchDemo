apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "demo-app-nextjs.fullname" . }}
  labels:
    {{- include "demo-app-nextjs.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "demo-app-nextjs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.opensearch }}
        checksum/secret2: {{ include (print $.Template.BasePath "/secret2.yaml") . | sha256sum }}
        {{- end }}
      labels:
        {{- include "demo-app-nextjs.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            - name: ELASTICSEARCH_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.secretName }}
                  key: url
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.secretName }}
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.secretName }}
                  key: password
            {{- if .Values.opensearch }}
            - name: OPENSEARCH_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.opensearch.secretName }}
                  key: url
            - name: OPENSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.opensearch.secretName }}
                  key: username
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.opensearch.secretName }}
                  key: password
            - name: USE_OPENSEARCH
              value: {{ .Values.opensearch.use | quote }}
            {{- end }}

          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
